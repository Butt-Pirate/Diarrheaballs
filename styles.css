/* Hosted noise tile from GitHub (tiny transparent PNG) */
:root {
    --noise-url: url("https://upload.wikimedia.org/wikipedia/commons/5/5f/White_Noise_Texture.png");
  }
  
  /* Fonts:
     - Display: 'Rubik Glitch', 'Rubik Doodle Shadow'
     - Body: 'Inter'
  */
  
  :root {
    --bg: #0b0b10;
    --ink: #e9ffef;
    --acid: #38f9d7;
    --hot: #ff4d6d;
    --zap: #ffd166;
    --vio: #b388ff;
    --glow: 0 0 6px rgba(255, 255, 255, 0.6),
      0 0 18px rgba(56, 249, 215, 0.4);
    --scan: linear-gradient(
      rgba(255, 255, 255, 0.05),
      rgba(0, 0, 0, 0.05)
    );
  }
  
  *,
  *::before,
  *::after {
    box-sizing: border-box;
  }
  
  html,
  body {
    margin: 0;
    padding: 0;
    background: var(--bg);
    color: var(--ink);
    font-family: Inter, system-ui, -apple-system, Segoe UI, Roboto, "Helvetica Neue",
      Arial, "Noto Sans", "Liberation Sans", sans-serif;
    line-height: 1.4;
    overflow-x: hidden;
  }
  
  a {
    color: inherit;
    text-decoration: none;
  }
  
  img {
    max-width: 100%;
    display: block;
  }
  
  /* Background chaos */
  
  .bg-static {
    position: relative;
    min-height: 100dvh;
  }
  
  .noise {
    position: fixed;
    inset: 0;
    pointer-events: none;
    background: var(--noise-url),
      repeating-conic-gradient(
        from 0deg,
        rgba(255, 255, 255, 0.02) 0 10deg,
        rgba(0, 0, 0, 0.02) 10deg 20deg
      );
    mix-blend-mode: overlay;
    opacity: 0.25;
    animation: hiss 0.7s steps(3) infinite;
    background-size: 256px 256px, auto;
  }
  
  @keyframes hiss {
    to {
      transform: translate3d(2px, -2px, 0);
    }
  }
  
  .scanline {
    position: fixed;
    inset: 0;
    pointer-events: none;
    background-image: repeating-linear-gradient(
      to bottom,
      rgba(255, 255, 255, 0.05) 0,
      rgba(255, 255, 255, 0.05) 1px,
      transparent 2px,
      transparent 4px
    );
    mix-blend-mode: soft-light;
    opacity: 0.25;
  }
  
  .blob {
    position: fixed;
    width: 70vmax;
    height: 70vmax;
    border-radius: 50%;
    filter: blur(60px) saturate(160%);
    opacity: 0.25;
    z-index: -1;
    animation: drift 40s ease-in-out infinite alternate;
    transform: translate3d(-20%, -10%, 0);
  }
  
  .blob-a {
    background: radial-gradient(
      circle at 30% 30%,
      #39ffb6,
      transparent 60%
    );
  }
  
  .blob-b {
    background: radial-gradient(
      circle at 70% 70%,
      #ff4d6d,
      transparent 60%
    );
    animation-duration: 55s;
    transform: translate3d(20%, 20%, 0);
  }
  
  .blob-danger {
    background: radial-gradient(circle at 60% 40%, #ff0040, transparent 60%);
    width: 90vmax;
    height: 90vmax;
    animation-duration: 30s;
  }
  
  @keyframes drift {
    0% {
      transform: translate3d(-25%, -10%, 0) scale(1);
    }
    100% {
      transform: translate3d(25%, 10%, 0) scale(1.15);
    }
  }
  
  /* CRT / glitch effects */
  
  .crt {
    text-shadow: 0.03em 0 0 #ff2a6d, -0.02em 0 0 #00d9ff;
    filter: contrast(105%) saturate(120%);
  }
  
  .flicker {
    animation: flicker 2.2s infinite steps(30);
  }
  
  @keyframes flicker {
    0%,
    100% {
      opacity: 1;
    }
    10% {
      opacity: 0.85;
    }
    20% {
      opacity: 0.6;
    }
    22% {
      opacity: 0.2;
    }
    23% {
      opacity: 1;
    }
    60% {
      opacity: 0.9;
    }
  }
  
  .glitch {
    position: relative;
    display: inline-block;
    font-family: "Rubik Glitch", system-ui, sans-serif;
    letter-spacing: 0.04em;
  }
  
  .glitch::before,
  .glitch::after {
    content: attr(data-text);
    position: absolute;
    inset: 0;
    clip-path: polygon(0 2%, 100% 2%, 100% 35%, 0 35%);
    mix-blend-mode: difference;
  }
  
  .glitch::before {
    transform: translate(-2px, -1px);
    color: #00d9ff;
    animation: glitchy 2s infinite;
  }
  
  .glitch::after {
    transform: translate(2px, 1px);
    color: #ff2a6d;
    animation: glitchy 1.5s infinite reverse;
  }
  
  @keyframes glitchy {
    0% {
      clip-path: polygon(0 10%, 100% 10%, 100% 20%, 0 20%);
    }
    20% {
      clip-path: polygon(0 40%, 100% 40%, 100% 60%, 0 60%);
    }
    40% {
      clip-path: polygon(0 5%, 100% 5%, 100% 25%, 0 25%);
    }
    60% {
      clip-path: polygon(0 70%, 100% 70%, 100% 90%, 0 90%);
    }
    80%,
    100% {
      clip-path: polygon(0 30%, 100% 30%, 100% 45%, 0 45%);
    }
  }
  
  /* Layout */
  
  .header {
    padding: 24px clamp(16px, 3vw, 48px);
  }
  
  .header.tight {
    padding-bottom: 8px;
  }
  
  .nav {
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: 16px;
    flex-wrap: wrap;
  }
  
  .brand .logo {
    font-family: "Rubik Doodle Shadow", system-ui, sans-serif;
    font-size: clamp(28px, 6vw, 64px);
    line-height: 1.05;
    margin: 0 0 6px 0;
    text-shadow: var(--glow);
  }
  
  .tagline {
    margin: 0;
    font-size: clamp(14px, 2.2vw, 18px);
    opacity: 0.95;
  }
  
  .nav-links {
    list-style: none;
    display: flex;
    gap: 12px;
    padding: 0;
    margin: 8px 0 0 0;
  }
  
  .btn {
    display: inline-block;
    padding: 10px 16px;
    border: 2px solid currentColor;
    border-radius: 12px;
    font-weight: 700;
    letter-spacing: 0.02em;
    transition: transform 0.08s ease, filter 0.2s ease;
    will-change: transform;
    cursor: pointer;
    user-select: none;
  }
  
  .btn:hover {
    transform: translateY(-2px) scale(1.02);
  }
  
  .neon-btn {
    color: var(--acid);
    box-shadow: 0 0 12px rgba(56, 249, 215, 0.45);
  }
  
  .danger-btn {
    color: var(--hot);
    box-shadow: 0 0 12px rgba(255, 77, 109, 0.4);
  }
  
  .ghost-btn {
    color: var(--vio);
    border-style: dashed;
  }
  
  .mega-btn {
    font-size: clamp(16px, 2.8vw, 22px);
  }